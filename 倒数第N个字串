/*给定一个完全由小写英文字母组成的字符串等差递增序列，该序列中的每个字符串的长度固定为 L，从 L 个 a 开始，以 1 为步长递增。例如当 L 为 3 时，序列为 { aaa, aab, aac, ..., aaz, aba, abb, ..., abz, ..., zzz }。这个序列的倒数第27个字符串就是 zyz。对于任意给定的 L，本题要求你给出对应序列倒数第 N 个字符串。
输入格式：
输入在一行中给出两个正整数 L（2 ≤ L ≤ 6）和 N（≤10
​5
​​）。
输出格式：
在一行中输出对应序列倒数第 N 个字符串。题目保证这个字符串是存在的。
输入样例：
3 7417
输出样例：
pat
// 找规律
*/

#include <bits/stdc++.h>
using namespace std;
typedef long long ll;

char a[27]={'0','a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'};
int main(){
	int n,m;
	while(cin >> n >> m){
		m=(int)pow(26,n)-m+1;
		//for(int i=0;i<26;i++) cout << a[i] << endl;
		//cout << m;
		for(int i=1;i<=n;i++){
			int temp=(int)pow(26,n-i);
		//	cout << temp << endl;
			int temp1=m/temp;
		//	cout << temp1 << endl;
			if(m%temp!=0) temp1++;
			cout << a[temp1];
			if(m%temp!=0) temp1--;
			m=m-temp1*temp;
		//	cout << m << endl;
		}
		cout << endl;
	}
	return 0;
}
